
from flask import Flask,render_template,request,redirect
from eeconvert import eeImageToFoliumLayer as ee_plot
import ee
import folium  # importo la libreria ee de eart engine
from mapa import hacer_mapa # importo una funcion de mapas
from app import app,db
from mapa_basededatos import usuario

# registro de usuario de google eart
service_account = 'saleons@unincca.edu.co'

#https://developers.google.cn/earth-engine/guides/service_account#use-a-service-account-with-a-private-key
# uno el .json que descargue de google cloud
credentials = ee.ServiceAccountCredentials(service_account, 'leafy-rope-354103-f81b0028a3a9.json')

# se envian datos para entra
ee.Initialize(credentials)

# genero mapas con la funcion hacer mapas
coordenada_centrar=[-11.010444,-76.111489]
hacer_mapa(coordenada_centrar)

# ruta principal
@app.route('/')
def index():
    return render_template("index.html")   
  
# redireciono con el boton a la pgina html con la funion pagina 2 
@app.route('/pagina2')
def pagina2():
    return render_template('pagina2.html')

# redireciono con el boton a la pgina html con la funcion registrarse
@app.route('/registrarse')
def registrarse():
    return render_template('registrarse.html')

# redireciono con el boton a la pgina html con la funcion registrarse
@app.route('/logearse',methods=['POST'])
def logearse():
    
    # SI EL METODO ES POST ENTONCE:
    if request.method =="POST": 
        # trae nombre desde registrse.html y lo mete en la variabel
         log_email=request.form["email"]
         log_password=request.form["password"]
         
         print(log_email)
         print(log_password)
         
         # recorrer todo e guardar en val_email
         val_email=usuario.query.all()
         # recorrer cada usuario
         for e in val_email:
             # si el correo es igual al digitado ingresa
             if e.Correo == log_email:
                 print("correo registrado")
                 if e.Contrasenia == log_password:
                     return render_template("index.html")  
                 else :
                     print("contrase√±a no coincide")
             else:
                 print("correo no registrado")
                 
    return render_template('pagina2.html')           
            

    
             
         
     
 
# redireciono con el boton a la pgina html con la funion registrado, con el metodo de post para campturar del fomrmulatio ES POST PARA Q NO SE ENVIE EN AL URL
@app.route('/registrado',methods=['POST'])
def registrado():
     # SI EL METODO ES POST ENTONCE:
    if request.method =="POST": 
        # trae nombre desde registrse.html y lo mete en la variabel
         Nombre=request.form["Nombre"]
         Apellido=request.form["Apellido"]
         email=request.form["email"]
         password=request.form["password"]
         
         # crear un objeto 
         new_usuario=usuario(Nombre,Apellido,email,password)
         
         # agrego a base de datos
         db.session.add(new_usuario)
         
         # cierro
         db.session.commit()
         
         # regreso al loggin
         return render_template("pagina2.html") 
     
 # se define el puerto de salida
if __name__ == "__main__":
    app.run(debug=True, port=5000)


